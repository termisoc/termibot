#!/usr/bin/env python
# -*- coding: utf-8 -*-

import sys, re, os
from datetime import datetime

import pymongo as mongo

m = mongo.connection.Connection()
db = m.subvirc.karma

def apply_karma(item, sign, reason, instance):
    direction = 1 if sign == '++' else -1 if sign == '--' else 0
    obj = {
            'item': item,
            'direction': direction,
            'reason': reason,
            'timestamp': float(datetime.now().strftime("%s.%f")),
        }
    db.insert(obj)

    obj['total'] = _total(item, instance)
    return obj

def _filter(line, instance):
    plusminus = r'([+-]{2}|Â±)'
    simple_karma = r'\w{3,}'
    quoted_string = r'"(?:(?:\\.)|(?:[^"]))*"'
    karma_item = '(' + simple_karma + '|' + quoted_string + ')' + plusminus + r'(?=(?:\W|$))'
    karma_item_reason = karma_item + '( (?:for|because)' + '.+?' + '(?='+karma_item+'|$)|\([^\)]+\))?'
    karma_item_re = re.compile(karma_item_reason)

    line = line.strip()

    items = [list(i) for i in karma_item_re.findall(line)]
    result = []
    for item in items:
        if item[0][0] == '"':
            item[0] = item[0][1:-1]
        else:
            item[0] = re.sub('_',' ',item[0])
        karma, sign, reason = item[0:3]
        reason = reason.strip()
        result.append(apply_karma(karma, sign, reason, instance))
        result[-1]['direction']= 'up' if sign == '++' else 'down' if sign == '--' else 'no change'
    return result

def _total(item, instance):
    count = db.group(None, {'item':item.lower(), 'instance':instance}, { 'sum': 0 }, 'function(obj,prev) { prev.sum += obj.direction; }', None)
    if len(count) > 0:
        return int(count[0]['sum'])
    return 0

if __name__ == '__main__':
    nick, user, host, sender = sys.stdin.readline().split()[0:4]
    method = os.path.basename(sys.argv[0])
    instance = sys.argv[1]
    args = sys.stdin.readline()

    if method == 'karma_filter':
        result = _filter(args, instance)
        print(', '.join(['%(item)s %(direction)s (now %(total)s)' % item for item in result]))
    elif method == 'karma':
        args = args.split()
        result = _total(args[0], instance)
        print('karma for %s: %s' % (args[0], result))
